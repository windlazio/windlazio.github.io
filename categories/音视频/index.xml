<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>音视频 on Pavel Han的博客</title>
    <link>http://www.pavelhan.tech/categories/%E9%9F%B3%E8%A7%86%E9%A2%91/</link>
    <description>Recent content in 音视频 on Pavel Han的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 13 Oct 2020 10:40:10 +0800</lastBuildDate>
    
	<atom:link href="http://www.pavelhan.tech/categories/%E9%9F%B3%E8%A7%86%E9%A2%91/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>GB28181基础知识学习总结</title>
      <link>http://www.pavelhan.tech/post/2020-10-13-00-GB28181%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/</link>
      <pubDate>Tue, 13 Oct 2020 10:40:10 +0800</pubDate>
      
      <guid>http://www.pavelhan.tech/post/2020-10-13-00-GB28181%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/</guid>
      <description>GB28281标准要解决的问题： 用于解决音视频监控领域中，不同厂家生产的不同平台和不同产品之间的互通协议问题。 在GB28181协议推出之前，不同厂家的不同产品往往都有自己的解决方案和通信协议，因为基本上监控平台与摄像头、DVR等设备之间只能在厂家内部达成对接协议互通。 GB2818</description>
    </item>
    
    <item>
      <title>最简单的基于QT&#43;ffmpeg的播放器的例子</title>
      <link>http://www.pavelhan.tech/post/2020-09-29-00-%E6%9C%80%E7%AE%80%E5%8D%95%E7%9A%84%E5%9F%BA%E4%BA%8EQT&#43;ffmpeg%E7%9A%84%E6%92%AD%E6%94%BE%E5%99%A8%E7%9A%84%E4%BE%8B%E5%AD%90/</link>
      <pubDate>Tue, 29 Sep 2020 09:40:10 +0800</pubDate>
      
      <guid>http://www.pavelhan.tech/post/2020-09-29-00-%E6%9C%80%E7%AE%80%E5%8D%95%E7%9A%84%E5%9F%BA%E4%BA%8EQT&#43;ffmpeg%E7%9A%84%E6%92%AD%E6%94%BE%E5%99%A8%E7%9A%84%E4%BE%8B%E5%AD%90/</guid>
      <description>前提条件： 基于 搭建基于QT Creator的ffmpeg开发环境在Windows环境中完成QT Creator++ffmpeg的开发环境，能够在QT Creator中正常的调用ffmpeg library中的接口得到正确的结果。 UI准备： 在QT Creator中新建一个QT Wigets Applica</description>
    </item>
    
    <item>
      <title>搭建基于QT Creator的ffmpeg开发环境</title>
      <link>http://www.pavelhan.tech/post/2020-09-24-00-%E6%90%AD%E5%BB%BA%E5%9F%BA%E4%BA%8EQTCreator%E7%9A%84ffmpeg%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</link>
      <pubDate>Thu, 24 Sep 2020 12:40:10 +0800</pubDate>
      
      <guid>http://www.pavelhan.tech/post/2020-09-24-00-%E6%90%AD%E5%BB%BA%E5%9F%BA%E4%BA%8EQTCreator%E7%9A%84ffmpeg%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</guid>
      <description>操作系统版本：Windows 10. 从ffmpeg上下载windows平台上预编译好的ffmpeg库 下载地址： https://ffmpeg.zeranoe.com/builds/。 在基于动态链接库开发的情况下，需要下载下图中的Shared和Dev两个包： 下载后解压缩到某个指定的目录中备</description>
    </item>
    
    <item>
      <title>AHD模拟摄像头的反向控制协议-Coaxial Protocol</title>
      <link>http://www.pavelhan.tech/post/2020-09-22-00-AHD%E6%A8%A1%E6%8B%9F%E6%91%84%E5%83%8F%E5%A4%B4%E7%9A%84%E5%8F%8D%E5%90%91%E6%8E%A7%E5%88%B6%E5%8D%8F%E8%AE%AE-CoaxialProtocol/</link>
      <pubDate>Tue, 22 Sep 2020 14:02:10 +0800</pubDate>
      
      <guid>http://www.pavelhan.tech/post/2020-09-22-00-AHD%E6%A8%A1%E6%8B%9F%E6%91%84%E5%83%8F%E5%A4%B4%E7%9A%84%E5%8F%8D%E5%90%91%E6%8E%A7%E5%88%B6%E5%8D%8F%E8%AE%AE-CoaxialProtocol/</guid>
      <description>缘起 对于控制一个云台摄像头的镜头动作而言，使用IP协议来进行控制是很容易做到的：IP摄像头与控制主机之间可以通过IP协议建立全双工双向通信，云台控制的命令可以很方便的发送到摄像头端，在摄像头端进行镜头的旋转、缩放等控制； 但是对于模拟摄像头而言，要轻松的做到这一点就很麻烦了：因为模</description>
    </item>
    
    <item>
      <title>QT5.9.8版本在海思3521平台上的移植</title>
      <link>http://www.pavelhan.tech/post/2020-09-15-00-QT5.9.8%E7%89%88%E6%9C%AC%E5%9C%A8%E6%B5%B7%E6%80%9D3521%E5%B9%B3%E5%8F%B0%E4%B8%8A%E7%9A%84%E7%A7%BB%E6%A4%8D/</link>
      <pubDate>Tue, 15 Sep 2020 11:02:10 +0800</pubDate>
      
      <guid>http://www.pavelhan.tech/post/2020-09-15-00-QT5.9.8%E7%89%88%E6%9C%AC%E5%9C%A8%E6%B5%B7%E6%80%9D3521%E5%B9%B3%E5%8F%B0%E4%B8%8A%E7%9A%84%E7%A7%BB%E6%A4%8D/</guid>
      <description>QT源码的下载及交叉编译工具的准备 QT源码的下载地址：https://download.qt.io/archive/qt/5.9/5.9.8/single/qt-everywhere-opensource-src-5.9.8.tar.xz； 交叉编译工具： 交叉编译工具使用的是海思3</description>
    </item>
    
    <item>
      <title>AF自动对焦算法及PDAF工作原理总结</title>
      <link>http://www.pavelhan.tech/post/2020-08-07-00-AF%E8%87%AA%E5%8A%A8%E5%AF%B9%E7%84%A6%E7%AE%97%E6%B3%95%E5%8F%8APDAF%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86%E6%80%BB%E7%BB%93/</link>
      <pubDate>Fri, 07 Aug 2020 14:23:10 +0800</pubDate>
      
      <guid>http://www.pavelhan.tech/post/2020-08-07-00-AF%E8%87%AA%E5%8A%A8%E5%AF%B9%E7%84%A6%E7%AE%97%E6%B3%95%E5%8F%8APDAF%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86%E6%80%BB%E7%BB%93/</guid>
      <description>AF自动对焦算法的定义及基本分类 AF：Auto Focus，自动对焦。 自动对焦的基本定义：相机上的图像传感器接收到物体反射的光，根据相机内部的计算与处理，然后由电动对焦装置对镜头进行的对焦操作。 基于自动对焦流程中是否需要相机主动向被拍摄的景物发射，自动对焦算法从大体上可以分为主动式</description>
    </item>
    
    <item>
      <title>变焦镜头的分类及变焦原理总结</title>
      <link>http://www.pavelhan.tech/post/2020-07-31-00-%E5%8F%98%E7%84%A6%E9%95%9C%E5%A4%B4%E7%9A%84%E5%88%86%E7%B1%BB%E5%8F%8A%E5%8F%98%E7%84%A6%E5%8E%9F%E7%90%86%E6%80%BB%E7%BB%93/</link>
      <pubDate>Fri, 31 Jul 2020 16:23:10 +0800</pubDate>
      
      <guid>http://www.pavelhan.tech/post/2020-07-31-00-%E5%8F%98%E7%84%A6%E9%95%9C%E5%A4%B4%E7%9A%84%E5%88%86%E7%B1%BB%E5%8F%8A%E5%8F%98%E7%84%A6%E5%8E%9F%E7%90%86%E6%80%BB%E7%BB%93/</guid>
      <description>变焦的分类及其实现变焦的原理 我们通常所谓的变焦能力通常可以分为光学变焦和数码变焦两种类型。两者虽然都有助于望远拍摄时放大远方物体，但是只有光学变焦可以支持图像主体成像后，让主体不但变大，同时也相对更清晰；数码变焦只能将原先的图像尺寸裁小，让图像在LCD屏幕上变得比较大，但并不会有</description>
    </item>
    
    <item>
      <title>BT601/BT656/BT1120的基本概念解析</title>
      <link>http://www.pavelhan.tech/post/2020-05-18-00-BT601&#43;BT656&#43;BT1120%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%E8%A7%A3%E6%9E%90/</link>
      <pubDate>Mon, 18 May 2020 10:08:10 +0800</pubDate>
      
      <guid>http://www.pavelhan.tech/post/2020-05-18-00-BT601&#43;BT656&#43;BT1120%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%E8%A7%A3%E6%9E%90/</guid>
      <description>要解释清楚BT656、BT601、BT1120这些规范的由来，就需要从最早期的模拟视频技术讲起。因此早期的电视以及音视频信号都是以模拟的形式采集、处理、传输、播放的，而到了数字时代，为了能够以更先进的数字形式来对模拟的图像视频进行进行处理，就要涉及到模拟视频数字化的处理，而BT6</description>
    </item>
    
    <item>
      <title>模拟高清视频传输技术：AHD，HD-TVI，HD-CVI</title>
      <link>http://www.pavelhan.tech/post/2020-05-14-00-%E6%A8%A1%E6%8B%9F%E9%AB%98%E6%B8%85%E8%A7%86%E9%A2%91%E4%BC%A0%E8%BE%93%E6%8A%80%E6%9C%AF/</link>
      <pubDate>Thu, 14 May 2020 10:56:10 +0800</pubDate>
      
      <guid>http://www.pavelhan.tech/post/2020-05-14-00-%E6%A8%A1%E6%8B%9F%E9%AB%98%E6%B8%85%E8%A7%86%E9%A2%91%E4%BC%A0%E8%BE%93%E6%8A%80%E6%9C%AF/</guid>
      <description>缘起 由于从事摄像头相关行业以来，一直做的都是数字也就是IP摄像头领域，因此之前对于模拟摄像头的认知，还停留在10多年前CCD标清模组+CBVS接口+同轴线缆传输，以及模拟摄像头无法支持高清分辨率的认知上。 对于模拟图像传输支持高清分辨率的方案，印象里只有大华之前推出的HD-SDI的</description>
    </item>
    
    <item>
      <title>H.264的几个基本概念: IDR, dts/pts</title>
      <link>http://www.pavelhan.tech/post/2020-05-12-00-H.264%E7%9A%84%E5%87%A0%E4%B8%AA%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</link>
      <pubDate>Tue, 12 May 2020 08:56:10 +0800</pubDate>
      
      <guid>http://www.pavelhan.tech/post/2020-05-12-00-H.264%E7%9A%84%E5%87%A0%E4%B8%AA%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</guid>
      <description>IDR帧与I帧之间的区别 IDR：Instantaneous Decoding Refresh。 I帧与IDR帧之间的区别涉及到H.264中不同帧类型的视频解码过程。 对于普通的I帧（及其IDR帧）而言，对其进行的视频解码不依赖于其他帧，对每一个I帧（及其IDR帧）解码都可以得到一张完整的图像。 对于每一</description>
    </item>
    
  </channel>
</rss>